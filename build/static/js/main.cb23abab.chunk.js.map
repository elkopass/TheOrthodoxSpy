{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","panels/Count.js","App.js","index.js"],"names":["Array","Home","id","go","fetchedUser","header","mode","stretched","size","onClick","top","onChange","e","type","placeholder","console","log","kek","Persik","props","left","className","src","persik","alt","Count","App","useState","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","fetchData","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"8OAKsB,IAAIA,MAU1B,IA0DeC,EA1DF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,EAAWC,YAAX,OACZ,eAAC,IAAD,CAAOF,GAAIA,EAAX,UACC,cAAC,IAAD,4HACA,eAAC,IAAD,CAAOG,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,6FAAf,UACC,cAAC,IAAD,6PAGA,cAAC,IAAD,sWAGA,cAAC,IAAD,wUAGA,cAAC,IAAD,sVAKD,cAAC,IAAD,CAAOD,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,qEAAf,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAQC,WAAS,EAACC,KAAK,IAAIF,KAAK,YAAYG,QAASN,EAAI,UAAQ,SAAjE,8GAcF,cAAC,IAAD,UACC,cAAC,IAAD,CAAUO,IAAI,0GAAd,SACC,cAAC,IAAD,CAAOC,SAAW,SAACC,GAAcA,GAAKC,KAAK,OAAOC,YAAY,uNCnDnD,MAA0B,mC,OCQzCC,QAAQC,IAAIC,GAEZ,IAgBeC,EAhBA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOjB,GAAIiB,EAAMjB,GAAjB,UACC,eAAC,IAAD,CACCkB,KAAM,cAAC,IAAD,CAAiBX,QAASU,EAAMhB,GAAI,UAAQ,SADnD,oBAGSc,KAET,qBAAKI,UAAU,SAASC,IAAKC,EAAQC,IAAI,uBCX3CT,QAAQC,IAAIC,GAEZ,IAkBeQ,EAlBD,SAAAN,GAAK,OAClB,cAAC,IAAD,CAAOjB,GAAIiB,EAAMjB,GAAjB,SACC,cAAC,IAAD,CACCkB,KAAM,cAAC,IAAD,CAAiBX,QAASU,EAAMhB,GAAI,UAAQ,SADnD,sBC2CauB,EA5CH,WACX,MAA4BC,mBAAS,gBAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,QAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA+BJ,mBAAS,MAAxC,mBAAOvB,EAAP,KAAoB4B,EAApB,KACA,EAA4BL,mBAAS,cAAC,IAAD,CAAenB,KAAK,WAAzD,mBAAOyB,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WAAM,4CAOf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECP,EAAQO,GACRL,EAAU,MAHX,4CAPe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAU5B,EAAkB,EAAlBA,KAAM6B,EAAY,EAAZA,KACtB,yBAAT7B,GACHgB,EAAUa,EAAKd,WAHF,mCAYfe,KACE,IAEH,IAAMxC,EAAK,SAAAS,GACVmB,EAAenB,EAAEgC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,CAAgBlB,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAaK,OAAQA,EAArB,SACC,cAAC,IAAD,UACC,eAAC,IAAD,CAAMH,YAAaA,EAAnB,UACC,cAAC,EAAD,CAAM5B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,IACxB,cAAC,EAAD,CAAOD,GAAI,QAAQC,GAAIA,kBCrC/BkC,IAAOC,KAAK,gBAEZS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cb23abab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar, FormItem, Input } from '@vkontakte/vkui';\n\nlet listOfLocations = new Array();\nlistOfLocations = [\"Стройплощадка\",\"Метро\",\"Паралмент\",\"Стадион\",\"Музей\",\"Дом престарелых\",\"Экскурсионный автобус\",\"Рок-концерт\",\"Шахта\",\"Свадьба\",\"Заправочная станция\",\"Библиотека\",\"Шоколадная фабрика\",\"Кладбище\",\"Джаз-банд\",\"Виноградник\",\"Порт\",\"Автогонки\",\"Тюрьма\",\"Выставка кошек\"];\n\n\nlet kek = \"5\";\n\nfunction setName(value) {\n\tkek = value;\n}\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Православные клоуны</PanelHeader>\n\t\t<Group header={<Header mode=\"secondary\">Список локаций</Header>}>\n\t\t\t<Div>\n\t\t\t\tСтройплощадка Метро Парламент Стадион Музей\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\tДом престарелых Экскурсионный автобус Рок-концерт Шахта Свадьба\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\tЗаправочная станция Библиотека Тюрьма Выставка кошек  Порт\n\t\t\t</Div>\n\t\t\t<Div>\n\t\t\t\tШоколадная фабрика Кладбище Джаз-бенд Виноградник Автогонка\n\t\t\t</Div>\n\t\t\n\t\t</Group>\n\t\t<Group header={<Header mode=\"secondary\">Новая игра</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tНачать новую игру\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t\t\n\t\t{/* <Group header={<Header mode=\"secondary\">Navigation Example2</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"count\">\n\t\t\t\t\tShow me the Count, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group> */}\n\n\t\t<Group>\n\t\t\t<FormItem top=\"Количество игроков\">\n\t\t\t\t<Input onChange={((e) => setName(e))} type=\"text\" placeholder=\"Введите количество игроков и нажмите Enter\" />\n\t\t\t</FormItem>\n\t  \t</Group>\n\n\t\t\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport kek from './Home'\nconsole.log(kek)\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik {kek}\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\nimport kek from './Home'\r\nconsole.log(kek)\r\n\r\nconst Count = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n\t\t>\r\n\t\t\tCount\r\n            \r\n\t\t</PanelHeader>\r\n\t</Panel>\r\n);\r\n\r\n\r\n\r\nCount.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Count;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport Count from './panels/Count';\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t\t<Count id ='count' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}